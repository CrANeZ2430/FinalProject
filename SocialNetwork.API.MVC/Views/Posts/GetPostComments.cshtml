@using SocialNetwork.API.MVC.Models.Dtos
@using System.Security.Claims
@model PostCommentsDto

@{
    ViewData["Title"] = "Post Comments";
}

<div class="container mt-5">
    <!-- Post Header -->
    <div class="card shadow-lg rounded-4 border-0 mb-4">
        <div class="card-header bg-primary text-white d-flex align-items-center gap-3 rounded-top-4">
            @if (Model.Post.User != null && !string.IsNullOrEmpty(Model.Post.User.ProfilePicturePath))
            {
                <img src="@Url.Action("ProxyImage", "Utilities", new { url = Model.Post.User.ProfilePicturePath })" alt="User Profile" class="rounded-circle border border-white" style="width: 50px; height: 50px; object-fit: cover;">
                <div>
                    <h5 class="mb-0">@Model.Post.User.UserName</h5>
                    <small class="text-white-50">@Model.Post.CreationTime.ToString("g")</small>
                </div>
            }
            else
            {
                <i class="bi bi-person-circle" style="font-size: 50px;"></i>
                <div>
                    <h5 class="mb-0">[нелице]</h5>
                    <small class="text-white-50">@Model.Post.CreationTime.ToString("g")</small>
                </div>
            }
        </div>
        <div class="card-body">
            <h4 class="card-title fw-bold">@Model.Post.Title</h4>
            <p class="card-text">@Model.Post.Content</p>

            <!-- Post Images Carousel -->
            @if (Model.Post.Images != null && Model.Post.Images.Any())
            {
                <div id="carousel-post-@Model.Post.PostId" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @foreach (var image in Model.Post.Images)
                        {
                            <div class="carousel-item @(Model.Post.Images.First() == image ? "active" : "")">
                                <img src="@Url.Action("ProxyImage", "Utilities", new { url = image })" class="d-block w-100" alt="Post Image" style="max-height: 400px; object-fit: cover;">
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carousel-post-@Model.Post.PostId" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carousel-post-@Model.Post.PostId" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            }
        </div>
        <div class="card-footer bg-light d-flex justify-content-between align-items-center rounded-bottom-4">
            <div>
                <form asp-action="LikePost" asp-controller="Posts" class="d-flex align-items-center">
                    <input type="hidden" name="postId" value="@Model.Post.PostId" />
                    <input type="hidden" name="redirectUrl" value="GetPostComments" />
                    <button type="submit" class="btn btn-outline-success btn-sm d-flex align-items-center">
                        <i class="fas fa-thumbs-up"></i>
                        <span class="ms-2">@Model.Post.LikeCount Likes</span>
                    </button>
                </form>
            </div>

            <!-- Delete Post Button -->
            @if (Model.Post.User != null && Model.Post.User.UserId == User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value)
            {
                <form asp-action="DeletePost" asp-controller="Posts" method="post" class="d-flex align-items-center">
                    <input type="hidden" name="postId" value="@Model.Post.PostId" />
                    <button type="submit" class="btn btn-outline-danger btn-sm d-flex align-items-center">
                        <i class="bi bi-trash"></i>
                        <span class="ms-2">Delete Post</span>
                    </button>
                </form>
            }
        </div>
    </div>

    <!-- Comments Section -->
    <h5 class="text-secondary mb-3">Comments (@Model.Comments.Length)</h5>

    @if (Model.Comments.Any())
    {
        <ul class="list-group mb-4">
            @foreach (var comment in Model.Comments)
            {
                <li class="list-group-item d-flex align-items-start gap-3">
                    @if (comment.User != null && !string.IsNullOrEmpty(comment.User.ProfilePicturePath))
                    {
                        <img src="@Url.Action("ProxyImage", "Utilities", new { url = comment.User.ProfilePicturePath })" alt="Profile" class="rounded-circle" style="width: 40px; height: 40px; object-fit: cover;">
                        <div>
                            <strong>@comment.User.UserName</strong>
                            <small class="text-muted d-block">@comment.CreationTime.ToString("g")</small>
                            <p class="mb-0">@comment.Content</p>

                            <form asp-action="LikeComment" asp-controller="Comments" class="d-flex align-items-center">
                                <input type="hidden" name="postId" value="@Model.Post.PostId" />
                                <input type="hidden" name="commentId" value="@comment.CommentId" />
                                <button type="submit" class="btn btn-outline-success btn-sm d-flex align-items-center">
                                    <i class="fas fa-thumbs-up"></i>
                                    <span class="ms-2">@comment.LikeCount</span>
                                </button>
                            </form>
                        </div>
                    }
                    else
                    {
                        <i class="bi bi-person-circle" style="font-size: 50px;"></i>
                        <div>
                            <strong>[нелице]</strong>
                            <small class="text-muted d-block">@comment.CreationTime.ToString("g")</small>
                            <p class="mb-0">@comment.Content</p>
                        </div>
                    }

                    <!-- Delete Comment Button -->
                    @if (comment.User != null && comment.User.UserId == User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value)
                    {
                        <form asp-action="DeleteComment" asp-controller="Comments" method="post" class="d-flex align-items-center mt-2">
                            <input type="hidden" name="postId" value="@Model.Post.PostId" />
                            <input type="hidden" name="commentId" value="@comment.CommentId" />
                            <button type="submit" class="btn btn-outline-danger btn-sm d-flex align-items-center">
                                <i class="bi bi-trash"></i>
                                <span class="ms-2">Delete Comment</span>
                            </button>
                        </form>
                    }
                </li>
            }
        </ul>
    }
    else
    {
        <div class="alert alert-info">No comments yet. Be the first to comment!</div>
    }

    <!-- (Optional) Add Comment Form -->
    <form asp-action="AddComment" asp-controller="Comments" method="post" class="card p-3 shadow-sm">
        @Html.AntiForgeryToken()
        <input type="hidden" name="postId" value="@Model.Post.PostId" />
        <input type="hidden" name="userId" value="@User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;" />
        <div class="mb-3">
            <label for="Content" class="form-label">Add a comment:</label>
            <textarea name="Content" class="form-control" rows="3" required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit Comment</button>
    </form>
</div>
